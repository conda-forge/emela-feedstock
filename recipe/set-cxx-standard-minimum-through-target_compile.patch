From b70ea8ff42fb6dbbd7b3927419b007c1b7ad2dd3 Mon Sep 17 00:00:00 2001
From: Matthew Feickert <matthew.feickert@cern.ch>
Date: Mon, 15 Sep 2025 16:14:47 -0600
Subject: [PATCH] feat: Set CXX standard minimum through
 target_compile_features

* Require a the compiler to invoke a mode of at-least C++11, or newer if
  available using target_compile_features.
   - Remove explicit setting of -std=c++11 as CMake will set the correct flags if
     required.
   - c.f. https://cmake.org/cmake/help/latest/manual/cmake-compile-features.7.html#requiring-language-standards
* Update cmake_minimum_required policy_max to 4.1.
* This patch also includes the changes from PR 2 to https://github.com/gstagnit/eMELA
  so that the patch alignment works.
---
 CMakeLists.txt | 29 +++++++++++++++--------------
 1 file changed, 15 insertions(+), 14 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index b6e67f6..d5adeef 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -1,13 +1,11 @@
 # define minimum version of cmake
-cmake_minimum_required(VERSION 3.12...3.31)
+cmake_minimum_required(VERSION 3.12...4.1)
 
 # define project name and its language
 project(eMELA CXX Fortran)
 
 # define c++ standard
 set(CMAKE_BUILD_TYPE Release)
-set(CMAKE_CXX_STANDARD 11)
-set(CMAKE_CXX_STANDARD_REQUIRED ON)
 set(CMAKE_CXX_EXTENSIONS OFF)
 set(CMAKE_Fortran_FLAGS "${CMAKE_Fortran_FLAGS}  -fPIC -Wunused")
 set(CMAKE_SHARED_LINKER_FLAGS -w)
@@ -47,7 +45,10 @@ add_subdirectory(example)
 # LHAPDF optional
 option(WITH_LHAPDF "Use LHAPDF" OFF)
 
+
 if(WITH_LHAPDF)
+  find_package(Boost REQUIRED)
+
   message("-- LHAPDF enabled")
   add_definitions(-DUSE_LHAPDF)
   find_program(LHAPDF_CONFIG lhapdf-config REQUIRED)
@@ -63,24 +64,24 @@ if(WITH_LHAPDF)
      )
      set(LHAPDF_LIBRARIES ${LHAPDF_LIBRARIES} CACHE STRING INTERNAL)
   endif(LHAPDF_CONFIG)
-endif(WITH_LHAPDF)
-
-if(WITH_LHAPDF)
-   set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${LHAPDF_CXX_FLAGS} -std=c++11 -Wall -Wextra -Wpedantic -fPIC")
+  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${LHAPDF_CXX_FLAGS} -Wall -Wextra -Wpedantic -fPIC")
 else()
-   set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 -Wall -Wextra -Wpedantic -fPIC")
+  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wextra -Wpedantic -fPIC")
 endif()
 
-# build target library
-# add_subdirectory(src)
-# add_subdirectory(run)
-
 option(SHARED "Build shared-libray instead of static-libray" ON)
 if(SHARED)
   add_library(eMELA SHARED ${source_files})
-else(SHARED)
+else()
   add_library(eMELA STATIC ${source_files})
-endif(SHARED)
+endif()
+
+# ensure the compiler is invoked in a mode of at-least C++ 11
+target_compile_features(eMELA PUBLIC cxx_std_11)
+
+if(WITH_LHAPDF)
+  target_include_directories(eMELA PUBLIC ${Boost_INCLUDE_DIRS})
+endif()
 
 if(DEFINED MELA_LIBRARIES)
   target_link_libraries(eMELA ${LHAPDF_LIBRARIES} ${MELA_LIBRARIES})
-- 
2.51.0

